•	Create a user on the master machine then go into its home directory to perform the remaining steps.

useradd Byran && cd /home/Byran

•	Create a private key:

openssl genrsa -out Byran.key 2048

•	Create a certificate signing request (CSR). CN is the username and O the group. We can set permissions by group, 
which can simplify management if we have, for example, multiple users with the same authorizations.

openssl req -new -key Byran.key -out Byran.csr -subj "/CN=Byran/O=$group1/O=$group2/O=$group3"

•	Sign the CSR with the Kubernetes CA. We have to use the CA cert and key which are normally in /etc/kubernetes/pki/. Our certificate will be valid for 500 days.

openssl x509 -req -in Byran.csr -CA /etc/kubernetes/pki/ca.crt -CAkey /etc/kubernetes/pki/ca.key -CAcreateserial -out Byran.crt -days 500

•	Create a “.certs” directory where we are going to store the user public and private key.

mkdir .certs && mv Byran.crt Byran.key .certs

•	Create the user inside Kubernetes.

kubectl config set-credentials Byran --client-certificate=/home/Byran/.certs/Byran.crt --client-key=/home/Byran/.certs/Byran.key

•	Create a context for the user.

kubectl config set-context Byran-context --cluster=kubernetes --user=Byran

•	Edit the user config file. 
The config file has the information needed for the authentication to the cluster. 
You can use the cluster admin config which is normally in /etc/kubernetes. 
The “certificate-authority-data” and “server” variables have to be as in the cluster admin config.
=====================
apiVersion: v1
clusters:
- cluster:
 certificate-authority-data: {Parse content here}
 server: {Parse content here}
name: kubernetes
contexts:
- context:
 cluster: kubernetes
 user: Byran
name: Byran-context
current-context: Byran-context
kind: Config
preferences: {}
users:
- name: Byran
user:
 client-certificate: /home/Byran/.certs/Byran.cert
 client-key: /home/Byran/.certs/Byran.key
==============================================
•	Then we need to copy the config above in the .kube directory.

mkdir .kube && vi .kube/config

•	Now we need to grant all the created files and directories to the user:

chown -R Byran: /home/Byran/

•	Now we have a user “Byran” created. 

Now we have our users, we can create the namespaces:

kubectl create namespace dev
kubectl create namespace staging
kubectl create namespace production

•	Create Role and ClusterRole
 
To create them:

kubectl create -f /path/to/your/yaml/file


